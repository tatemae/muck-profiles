= MuckProfiles

Add profiles to muck users.  This implements a photo for users as well as a property bag that enables total customization of the user's profile information including privacy settings.

== Installation
Muck profile relies upon the muck-engine and muck-users gems as well as paperclip.  Add the following lines to your environment.rb file:

  config.gem "authlogic"
  config.gem "searchlogic"
  config.gem "bcrypt-ruby", :lib => "bcrypt"
  config.gem 'paperclip'
  config.gem 'muck-engine', :lib => 'muck_engine'
  config.gem 'muck-users', :lib => 'muck_users'
  config.gem 'muck-profiles', :lib => 'muck_profiles'
  config.gem 'geokit'

Next run rake gems:install

MuckProfiles uses geokit to determine a users location and to make it possible to find users that are within a given proximity.

Install the GeoKit Rails Plugin:

  script/plugin install git://github.com/andre/geokit-rails.git

Be sure to get api keys from Google an Yahoo.  Instructions for doing so can be found in config/initializers/geokit_config.rb after installing the plugin.  We recommend moving the keys into
global_config.yml:

Change the lines in config/initializers/geokit_config.rb to:
  Geokit::Geocoders::yahoo = GlobalConfig.yahoo_geo_key
  Geokit::Geocoders::google = GlobalConfig.google_geo_key

Put this in global_config.yml:
  google_geo_key: 'some key'  # API key for Google.  Get it here: http://www.google.com/apis/maps/signup.html
  yahoo_geo_key: 'some key'   # API key for Yahoo.  Get it here: http://developer.yahoo.com/faq/index.html#appid

# Profile configuration
  enable_guess_location: true # If true the profile system will attempt to determine the user's location via IP and populated with the location, lat and lon fields.
  
== Usage
Create a model called profile.rb and add 'acts_as_muck_profile'.  This mixes in the muck profile functionality but also permits further customization of the profile in your application.

  class Profile < ActiveRecord::Base
    acts_as_muck_profile
  end

Modify your user model so that it has a profile:

  class User < ActiveRecord::Base
    acts_as_authentic do |c|
      c.crypto_provider = Authlogic::CryptoProviders::BCrypt
    end
    acts_as_muck_user
    has_muck_profile
  end


Your user model will now appear to have a 'photo' which is delegated to the profile model:

  @user.photo # returns a photo object from paperclip

Copyright (c) 2009 Tatemae, released under the MIT license
